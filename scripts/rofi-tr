#!/usr/bin/env bash

PROMPT_TR=" translate"
PROMPT_COPY="󰆏 Copy to clipboard"
PROMPT_SPEAK=" Play last translation"
result=""

rofi_cmd() {
    rofi -dmenu -theme-str "window {width: 50%;}" -p "$PROMPT_TR" "$@"
}

return_result() {
    input="$(echo -e "$PROMPT_COPY\n$PROMPT_SPEAK" | rofi_cmd -l 2 -mesg "$result")"

    case $input in
    "$PROMPT_COPY")
        wl-copy "$result_copy"
        notify-send "󰆏 Translation copied" "Translation copied to clipboard."
        exit 0
        ;;
    "$PROMPT_SPEAK")
        trans -p $langs "$text" >/dev/null &
        ;;
    esac
}

translate() {
    local trans_input="$1"

    # match "-p :uk hello"
    # "-p -b pl:uk hello"
    # "pl: hello"
    # "hello"
    if [[ $trans_input =~ ((\-[a-z] *)*)\s*(([a-z]{2})?:([a-z]{2})?)?\s*(.*) ]]; then
        flags=${BASH_REMATCH[1]}
        langs=${BASH_REMATCH[3]}
        text=${BASH_REMATCH[-1]}
    else
        result=" Incorred input"
        result_copy=
        return
    fi

    if [[ -z "$text" ]]; then
        result=" Didn't supply text to translate"
        result_copy=
        return
    fi

    if [[ $flags = *-p* ]]; then
        flags=${flags/-p/}
        trans -p $langs "$text" >/dev/null &
    fi

    result=$(trans -no-ansi $flags $langs "$text" 2>/dev/null &)
    result_copy=$(trans -b $flags $langs "$text" 2>/dev/null &)
}

input="$(rofi_cmd -l 0)"

while [[ -n "$input" ]]; do
    [[ $input != "$PROMPT_SPEAK" ]] && translate "$input"
    return_result
done
